@page "/Rendeles"
@using CommonLibrary.MODEL
@using Vizsgafeladat.VIEWMODEL
@using Vizsgafeladat.services
@inject ProductServices productServices
@inject CartService cartService
@inject NavigationManager NavigationManager

<style>
    .menu-box .card {
        height: 480px; /* Szebb kártyamagasság */
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 15px;
        background-color: #ffffff; /* Fehér háttér */
        border: 1px solid #e0e0e0; /* Finom szürke keret */
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Finom árnyék */
    }

        .menu-box .card img {
            max-height: 160px;
            object-fit: contain;
            margin-bottom: 10px;
        }

    .menu-box .card-body {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    h5.card-title {
        color: #ffcc00; /* Vidám sárga */
        font-weight: bold;
        font-size: 1.2rem;
        margin-bottom: 10px;
    }

    .description {
        color: #333333; /* Barátságos sötétszürke */
        font-size: 0.95rem;
        margin-bottom: 10px;
    }

    .price {
        color: #ffcc00; /* Ugyanaz a vidám sárga mint a cím */
        font-weight: bold;
        font-size: 1.1rem;
        margin-bottom: 10px;
    }

    .quantity-input {
        width: 60px;
        margin: 0 auto 10px auto; /* Középen, alatta kis hely */
        text-align: center;
    }

    .btn-primary {
        width: 100%;
    }

    .menu-item {
        display: flex;
        justify-content: center;
        margin-bottom: 30px;
    }
</style>


<div class="container mt-5">
    <nav class="navbar navbar-expand-lg mb-5">
        <div class="collapse navbar-collapse justify-content-center" id="navbarNav">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <NavLink class="nav-link" href="/">Vissza a főoldalra</NavLink>
                </li>
            </ul>
        </div>
    </nav>

    @if (products != null && products.Any())
    {
        <div class="text-center mb-5">
            <h1 style="color: cornsilk;">Torták</h1>
            <hr class="divider" />
            <div class="row">
                @foreach (var torta in products.Where(p => p.Category_id == 4))
                {
                    @ProductCard(torta)
                }
            </div>
        </div>

        <div class="text-center mb-5">
            <h1 style="color: cornsilk;">Sütemények</h1>
            <hr class="divider" />
            <div class="row">
                @foreach (var sutemeny in products.Where(p => p.Category_id == 3))
                {
                    @ProductCard(sutemeny)
                }
            </div>
        </div>

        <div class="text-center mb-5">
            <h1 style="color: cornsilk;">Fagylaltok</h1>
            <hr class="divider" />
            <div class="row">
                @foreach (var fagylalt in products.Where(p => p.Category_id == 2))
                {
                    @ProductCard(fagylalt)
                }
            </div>
        </div>

        <div class="text-center mb-5">
            <h1 style="color: cornsilk;">Italok</h1>
            <hr class="divider" />
            <div class="row">
                @foreach (var ital in products.Where(p => p.Category_id == 1))
                {
                    @ProductCard(ital)
                }
            </div>
        </div>
    }
    else
    {
        <p class="text-center">Betöltés folyamatban...</p>
    }

    @* Kosár megjelenítése *@
    <div class="container my-5">
        <h2 class="text-center">Kosarad</h2>
        @if (cartService.CartItems.Any())
        {
            <ul class="list-group mb-3">
                @foreach (var item in cartService.CartItems)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @item.Product.Name (Mennyiség: @item.Quantity)
                        <span class="badge bg-primary rounded-pill">@((int)(item.Price * item.Quantity)) Ft</span>
                    </li>
                }
            </ul>

            <p class="text-end"><strong>Teljes összeg: @((int)cartService.GetTotalPrice()) Ft</strong></p>

            <div class="text-center">
                <button class="btn btn-success" @onclick="SaveOrder">Rendelés leadása</button>
            </div>
        }
        else
        {
            <p class="text-center">A kosarad üres.</p>
        }
    </div>
</div>

@code {
    private List<Product> products = new();
    private Dictionary<int, int> quantities = new(); // productId -> db szám

    protected override async Task OnInitializedAsync()
    {
        products = await productServices.GetAllProducts();
    }

    private void AddToCart(Product product)
    {
        int quantity = quantities.ContainsKey(product.Product_id) ? quantities[product.Product_id] : 1;

        var productEntity = new Product
            {
                Product_id = product.Product_id,
                Name = product.Name,
                Description = product.Description,
                Price = product.Price ?? 0,
                Category_id = product.Category_id,
                Image_url = product.Image_url
            };

        cartService.AddToCart(productEntity, quantity);
    }

    private async Task SaveOrder()
    {
        int orderId = await cartService.SaveOrderAsync();
        if (orderId > 0)
        {
            await Task.Delay(200);
            NavigationManager.NavigateTo("/rendeles-siker");
        }
        else
        {
            Console.WriteLine("Hiba történt a rendelés mentése közben.");
        }
    }

    private RenderFragment ProductCard(Product product) => __builder =>
    {
        __builder.OpenElement(0, "div");
        __builder.AddAttribute(1, "class", "col-md-3 menu-item"); // 4 kártya / sor
        __builder.OpenElement(2, "div");
        __builder.AddAttribute(3, "class", "card shadow-sm menu-box");
        __builder.OpenElement(4, "div");
        __builder.AddAttribute(5, "class", "card-body text-center");

        __builder.OpenElement(6, "h5");
        __builder.AddContent(7, product.Name);
        __builder.CloseElement(); // h5

        __builder.OpenElement(8, "img");
        __builder.AddAttribute(9, "src", string.IsNullOrEmpty(product.Image_url) ? "img/default.jpg" : product.Image_url);
        __builder.AddAttribute(10, "alt", product.Name);
        __builder.AddAttribute(11, "class", "img-fluid mb-3");
        __builder.CloseElement(); // img

        __builder.OpenElement(12, "p");
        __builder.AddAttribute(13, "class", "card-text");
        __builder.AddContent(14, product.Description);
        __builder.CloseElement(); // p

        __builder.OpenElement(15, "p");
        __builder.AddAttribute(16, "class", "price");
        __builder.AddContent(17, $"Ár: {(int)(product.Price ?? 0)} Ft");
        __builder.CloseElement(); // p

        __builder.OpenElement(18, "input");
        __builder.AddAttribute(19, "type", "number");
        __builder.AddAttribute(20, "min", "1");
        __builder.AddAttribute(21, "value", BindConverter.FormatValue(quantities.ContainsKey(product.Product_id) ? quantities[product.Product_id] : 1));
        __builder.AddAttribute(22, "class", "form-control quantity-input");
        __builder.AddAttribute(23, "onchange", EventCallback.Factory.CreateBinder<int>(this, value => quantities[product.Product_id] = value, quantities.ContainsKey(product.Product_id) ? quantities[product.Product_id] : 1));
        __builder.CloseElement(); // input

        __builder.OpenElement(24, "button");
        __builder.AddAttribute(25, "class", "btn btn-primary btn-cart");
        __builder.AddAttribute(26, "onclick", EventCallback.Factory.Create(this, () => AddToCart(product)));
        __builder.AddContent(27, "Kosárba");
        __builder.CloseElement(); // button

        __builder.CloseElement(); // card-body
        __builder.CloseElement(); // card
        __builder.CloseElement(); // col-md-3
    };
}
